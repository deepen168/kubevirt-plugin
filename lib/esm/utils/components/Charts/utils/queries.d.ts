import { K8sResourceCommon } from '@openshift-console/dynamic-plugin-sdk';
declare enum VMQueries {
    CPU_REQUESTED = "CPU_REQUESTED",
    CPU_USAGE = "CPU_USAGE",
    FILESYSTEM_READ_USAGE = "FILESYSTEM_READ_USAGE",
    FILESYSTEM_USAGE_TOTAL = "FILESYSTEM_TOTAL_USAGE",
    FILESYSTEM_WRITE_USAGE = "FILESYSTEM_WRITE_USAGE",
    INSTANT_MIGRATION_DATA_PROCESSED = "INSTANT_MIGRATION_DATA_PROCESSED",
    INSTANT_MIGRATION_DATA_REMAINING = "INSTANT_MIGRATION_DATA_REMAINING",
    MEMORY_USAGE = "MEMORY_USAGE",
    MIGRATION_DATA_PROCESSED = "MIGRATION_DATA_PROCESSED",
    MIGRATION_DATA_REMAINING = "MIGRATION_DATA_REMAINING",
    MIGRATION_DISK_TRANSFER_RATE = "MIGRATION_DISK_TRANSFER_RATE",
    MIGRATION_MEMORY_DIRTY_RATE = "MIGRATION_MEMORY_DIRTY_RATE",
    NETWORK_IN_BY_INTERFACE_USAGE = "NETWORK_IN_BY_INTERFACE_USAGE",
    NETWORK_IN_USAGE = "NETWORK_IN_USAGE",
    NETWORK_OUT_BY_INTERFACE_USAGE = "NETWORK_OUT_BY_INTERFACE_USAGE",
    NETWORK_OUT_USAGE = "NETWORK_OUT_USAGE",
    NETWORK_TOTAL_BY_INTERFACE_USAGE = "NETWORK_TOTAL_BY_INTERFACE_USAGE",
    NETWORK_TOTAL_USAGE = "NETWORK_TOTAL_USAGE",
    STORAGE_IOPS_TOTAL = "STORAGE_IOPS_TOTAL"
}
declare type UtilizationQueriesArgs = {
    duration?: string;
    launcherPodName?: string;
    nic?: string;
    obj: K8sResourceCommon;
};
declare type GetUtilizationQueries = ({ duration, launcherPodName, nic, obj }: UtilizationQueriesArgs) => {
    [key in VMQueries]: string;
};
export declare const getUtilizationQueries: GetUtilizationQueries;
export {};
