import { IoK8sApiBatchV1Job, IoK8sApiCoreV1ConfigMap, IoK8sApiRbacV1ClusterRoleBinding } from '@kubevirt-ui/kubevirt-api/kubernetes';
export declare const STORAGE_CHECKUP_SA = "storage-checkup-sa";
export declare const STORAGE_CHECKUP_ROLE = "storage-checkup-role";
export declare const KUBEVIRT_STORAGE_LABEL_VALUE = "kubevirt-vm-storage";
export declare const STORAGE_CLUSTER_ROLE_BINDING = "kubevirt-storage-checkup-clustereader";
export declare const STORAGE_CHECKUP_TIMEOUT = "spec.timeout";
export declare const STORAGE_CHECKUP_DEFAULT_STORAGE_CLASS = "status.result.defaultStorageClass";
export declare const STORAGE_CHECKUP_LIVE_MIGRATION = "status.result.vmLiveMigration";
export declare const STORAGE_CHECKUPS_GOLDEN_IMAGE_NOT_UP_TO_DATE = "status.result.goldenImagesNotUpToDate";
export declare const STORAGE_CHECKUPS_GOLDEN_IMAGE_NO_DATA_SOURCE = "status.result.goldenImagesNoDataSource";
export declare const STORAGE_CHECKUPS_WITH_SMART_CLONE = "status.result.storageProfilesWithSmartClone";
export declare const STORAGE_CHECKUPS_PVC_BOUND = "status.result.pvcBound";
export declare const STORAGE_CHECKUPS_MISSING_VOLUME_SNAP_SHOT = "status.result.storageProfileMissingVolumeSnapshotClass";
export declare const STORAGE_CHECKUPS_WITH_CLAIM_PROPERTY_SETS = "status.result.storageProfilesWithSpecClaimPropertySets";
export declare const STORAGE_CHECKUPS_WITH_EMPTY_CLAIM_PROPERTY_SETS = "status.result.storageProfilesWithEmptyClaimPropertySets";
export declare const STORAGE_CHECKUPS_STORAGE_WITH_RWX = "status.result.storageProfilesWithRWX";
export declare const STORAGE_CHECKUPS_BOOT_GOLDEN_IMAGE = "status.result.vmBootFromGoldenImage";
export declare const STORAGE_CHECKUPS_VM_HOT_PLUG_VOLUME = "status.result.vmHotplugVolume";
export declare const STORAGE_CHECKUPS_VM_VOLUME_CLONE = "status.result.vmVolumeClone";
export declare const STORAGE_CHECKUPS_WITH_NON_RBD_STORAGE_CLASS = "status.result.vmsWithNonVirtRbdStorageClass";
export declare const STORAGE_CHECKUPS_UNSET_EFS_STORAGE_CLASS = "status.result.vmsWithUnsetEfsStorageClass";
export declare const createStorageCheckup: (namespace: string, timeOut: string, name: string) => Promise<IoK8sApiBatchV1Job>;
export declare const installOrRemoveCheckupsStoragePermissions: (namespace: string, isPermitted: boolean, clusterRoleBinding: IoK8sApiRbacV1ClusterRoleBinding) => Promise<void>;
export declare const deleteStorageCheckup: (resource: IoK8sApiCoreV1ConfigMap, jobs: IoK8sApiBatchV1Job[]) => Promise<void>;
export declare const rerunStorageCheckup: (resource: IoK8sApiCoreV1ConfigMap) => Promise<IoK8sApiBatchV1Job>;
