import { IoK8sApiBatchV1Job, IoK8sApiCoreV1ConfigMap, IoK8sApiRbacV1ClusterRole, IoK8sApiRbacV1ClusterRoleBinding } from '@kubevirt-ui/kubevirt-api/kubernetes';
import { K8sResourceCommon } from '@openshift-console/dynamic-plugin-sdk';
export declare const KIAGNOSE_CONFIGMAP_ACCESS = "kiagnose-configmap-access";
export declare const VM_LATENCY_CHECKUP_SA = "vm-latency-checkup-sa";
export declare const KUBEVIRT_VM_LATENCY_CHECKER = "kubevirt-vm-latency-checker";
export declare const KUBEVIRT_VM_LATENCY_LABEL_VALUE = "kubevirt-vm-latency";
export declare const CONFIGMAP_NAMESPACE = "CONFIGMAP_NAMESPACE";
export declare const STATUS_AVG_LATENCY_NANO = "status.result.avgLatencyNanoSec";
export declare const STATUS_MAX_LATENCY_NANO = "status.result.maxLatencyNanoSec";
export declare const STATUS_MEASUREMENT_DURATION = "status.result.measurementDurationSec";
export declare const STATUS_MIN_LATENCY_NANO = "status.result.minLatencyNanoSec";
export declare const STATUS_TARGET_NODE = "status.result.targetNode";
export declare const STATUS_SOURCE_NODE = "status.result.sourceNode";
export declare const STATUS_SAMPLE_DURATION = "spec.param.sampleDurationSeconds";
export declare const STATUS_NAD_NAMESPACE = "spec.param.networkAttachmentDefinitionNamespace";
export declare const STATUS_NAD_NAME = "spec.param.networkAttachmentDefinitionName";
export declare const STATUS_MAX_DESIRED_LATENCY = "spec.param.maxDesiredLatencyMilliseconds";
export declare const installOrRemoveCheckupsNetworkPermissions: (namespace: string, remove?: boolean) => Promise<Awaited<IoK8sApiRbacV1ClusterRole | IoK8sApiRbacV1ClusterRoleBinding>[]>;
export declare const findObjectByName: (arr: K8sResourceCommon[], name: string) => K8sResourceCommon | undefined;
declare type CreateNetworkCheckupType = (arg: {
    desiredLatency: string;
    name: string;
    namespace: string;
    nodeSource: string;
    nodeTarget: string;
    sampleDuration: string;
    selectedNAD: string;
}) => Promise<IoK8sApiCoreV1ConfigMap>;
export declare const createNetworkCheckup: CreateNetworkCheckupType;
export declare const deleteNetworkCheckup: (configMap: IoK8sApiCoreV1ConfigMap, jobs: IoK8sApiBatchV1Job[]) => Promise<void>;
export declare const rerunNetworkCheckup: (resource: IoK8sApiCoreV1ConfigMap) => Promise<IoK8sApiBatchV1Job>;
export {};
